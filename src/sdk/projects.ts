/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { CreateAcceptEnum, projectsCreate } from "../funcs/projectsCreate.js";
import { GetAcceptEnum, projectsGet } from "../funcs/projectsGet.js";
import { ListAcceptEnum, projectsList } from "../funcs/projectsList.js";
import { projectsUpdate, UpdateAcceptEnum } from "../funcs/projectsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { ListAcceptEnum } from "../funcs/projectsList.js";

export { CreateAcceptEnum } from "../funcs/projectsCreate.js";

export { GetAcceptEnum } from "../funcs/projectsGet.js";

export { UpdateAcceptEnum } from "../funcs/projectsUpdate.js";

export class Projects extends ClientSDK {
  /**
   * List all projects that the API key or user credential has access to.
   */
  async list(
    options?: RequestOptions & { acceptHeaderOverride?: ListAcceptEnum },
  ): Promise<operations.ListProjectsResponse> {
    return unwrapAsync(projectsList(
      this,
      options,
    ));
  }

  /**
   * Create a new project
   */
  async create(
    request: operations.CreateProjectRequestBody,
    options?: RequestOptions & { acceptHeaderOverride?: CreateAcceptEnum },
  ): Promise<operations.CreateProjectResponse> {
    return unwrapAsync(projectsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get a project
   */
  async get(
    request: operations.GetProjectRequest,
    options?: RequestOptions & { acceptHeaderOverride?: GetAcceptEnum },
  ): Promise<operations.GetProjectResponse> {
    return unwrapAsync(projectsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a project
   */
  async update(
    request: operations.UpdateProjectRequest,
    options?: RequestOptions & { acceptHeaderOverride?: UpdateAcceptEnum },
  ): Promise<operations.UpdateProjectResponse> {
    return unwrapAsync(projectsUpdate(
      this,
      request,
      options,
    ));
  }
}
