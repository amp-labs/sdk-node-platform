/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  BatchUpsertAcceptEnum,
  integrationsBatchUpsert,
} from "../funcs/integrationsBatchUpsert.js";
import { integrationsCreate } from "../funcs/integrationsCreate.js";
import { integrationsDelete } from "../funcs/integrationsDelete.js";
import { integrationsList, ListAcceptEnum } from "../funcs/integrationsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { ListAcceptEnum } from "../funcs/integrationsList.js";

export { BatchUpsertAcceptEnum } from "../funcs/integrationsBatchUpsert.js";

export class Integrations extends ClientSDK {
  /**
   * List integrations
   */
  async list(
    request: operations.ListIntegrationsRequest,
    options?: RequestOptions & { acceptHeaderOverride?: ListAcceptEnum },
  ): Promise<operations.ListIntegrationsResponse> {
    return unwrapAsync(integrationsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a new integration.
   */
  async create(
    request: operations.CreateIntegrationRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateIntegrationAPIProblem | undefined> {
    return unwrapAsync(integrationsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete an integration
   */
  async delete(
    request: operations.DeleteIntegrationRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteIntegrationAPIProblem | undefined> {
    return unwrapAsync(integrationsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Batch upsert a group of integrations
   */
  async batchUpsert(
    request: operations.BatchUpsertIntegrationsRequest,
    options?: RequestOptions & { acceptHeaderOverride?: BatchUpsertAcceptEnum },
  ): Promise<operations.BatchUpsertIntegrationsResponse> {
    return unwrapAsync(integrationsBatchUpsert(
      this,
      request,
      options,
    ));
  }
}
