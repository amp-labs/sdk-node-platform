/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  GetMetadataAcceptEnum,
  objectsAndFieldsGetMetadata,
} from "../funcs/objectsAndFieldsGetMetadata.js";
import {
  GetObjectMetadataForConnectionAcceptEnum,
  objectsAndFieldsGetObjectMetadataForConnection,
} from "../funcs/objectsAndFieldsGetObjectMetadataForConnection.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { GetMetadataAcceptEnum } from "../funcs/objectsAndFieldsGetMetadata.js";

export { GetObjectMetadataForConnectionAcceptEnum } from "../funcs/objectsAndFieldsGetObjectMetadataForConnection.js";

export class ObjectsAndFields extends ClientSDK {
  /**
   * Get object metadata for installation
   *
   * @remarks
   * Retrieves metadata about an object in a customer's SaaS instance, including its fields.
   * This endpoint requires that an Installation exists for the given groupRef.
   * It applies object mappings.
   */
  async getMetadata(
    request: operations.GetObjectMetadataForInstallationRequest,
    options?: RequestOptions & { acceptHeaderOverride?: GetMetadataAcceptEnum },
  ): Promise<operations.GetObjectMetadataForInstallationResponse> {
    return unwrapAsync(objectsAndFieldsGetMetadata(
      this,
      request,
      options,
    ));
  }

  /**
   * Get object metadata for connection
   *
   * @remarks
   * Retrieves metadata about an object in a customer's SaaS instance, including its fields.
   * This endpoint only requires that a Connection exists for the given groupRef.
   * It does not apply any object mappings.
   */
  async getObjectMetadataForConnection(
    request: operations.GetObjectMetadataForConnectionRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: GetObjectMetadataForConnectionAcceptEnum;
    },
  ): Promise<operations.GetObjectMetadataForConnectionResponse> {
    return unwrapAsync(objectsAndFieldsGetObjectMetadataForConnection(
      this,
      request,
      options,
    ));
  }
}
