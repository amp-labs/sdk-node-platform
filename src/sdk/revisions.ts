/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { revisionsCreate } from "../funcs/revisionsCreate.js";
import {
  HydrateAcceptEnum,
  revisionsHydrate,
} from "../funcs/revisionsHydrate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { HydrateAcceptEnum } from "../funcs/revisionsHydrate.js";

export class Revisions extends ClientSDK {
  /**
   * Create a new revision.
   */
  async create(
    request: operations.CreateRevisionRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateRevisionAPIProblem | undefined> {
    return unwrapAsync(revisionsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Hydrate a revision
   *
   * @remarks
   * Hydrate a revision with information from the consumer's SaaS instance.
   */
  async hydrate(
    request: operations.GetHydratedRevisionRequest,
    options?: RequestOptions & { acceptHeaderOverride?: HydrateAcceptEnum },
  ): Promise<operations.GetHydratedRevisionResponse> {
    return unwrapAsync(revisionsHydrate(
      this,
      request,
      options,
    ));
  }
}
